{"version":3,"sources":["../../../src/@ionic-native/plugins/jpush/index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"","sourcesContent":["/**\n * This is a template for new plugin wrappers\n *\n * TODO:\n * - Add/Change information below\n * - Document usage (importing, executing main functionality)\n * - Remove any imports that you are not using\n * - Add this file to /src/index.ts (follow style of other plugins)\n * - Remove all the comments included in this template, EXCEPT the @Plugin wrapper docs and any other docs you added\n * - Remove this note\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Plugin, Cordova, IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * @name jpush\n * @description\n * This plugin does something\n *\n * @usage\n * ```typescript\n * import { jpush } from '@ionic-native/jpush';\n *\n *\n * constructor(private jpush: jpush) { }\n *\n * ...\n *\n *\n * this.jpush.functionName('Hello', 123)\n *   .then((res: any) => console.log(res))\n *   .catch((error: any) => console.error(error));\n *\n * ```\n */\n\n@Plugin({\n  pluginName: 'jpush',\n  plugin: 'jpush-phonegap-plugin', // npm package name, example: cordova-plugin-camera\n  pluginRef: 'window.plugins.jPushPlugin', // the variable reference to call the plugin, example: navigator.geolocation\n  repo: 'https://github.com/jpush/jpush-phonegap-plugin', // the github repository URL for the plugin\n  platforms: ['Android', 'iOS'], // Array of platforms supported, example: ['Android', 'iOS']\n  install: 'ionic cordova plugin add jpush-phonegap-plugin --variable APP_KEY=your_jpush_appkey', // OPTIONAL install command, in case the plugin requires variables\n  installVariables: ['your_jpush_appkey'],\n})\n\n\nexport class JPushPlugin extends IonicNativePlugin {\n\n  /**\n   * This function does something\n   * @param arg1 {string} Some param to configure something\n   * @param arg2 {number} Another param to configure something\n   * @return {Promise<any>} Returns a promise that resolves when something happens\n   */\n  @Cordova()\n  functionName(event: string): Observable<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  init(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  stopPush(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  resumePush(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  isPushStopped(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setDebugMode(bl: boolean) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  getRegistrationID(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setTagsWithAlias(arg1: any, arg2: any): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setTags(arg1: any): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setAlias(arg1: any): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  getUserNotificationSettings(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  receiveMessageInAndroidCallback(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  openNotificationInAndroidCallback(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setStatisticsOpen(bl: boolean) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  reportNotificationOpened(id: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  clearAllNotification() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  clearNotificationById(id: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setPushTime(arg1: any, arg2: any, arg3: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setSilenceTime(arg1: any, arg2: any, arg3: any, arg4: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setBasicPushNotificationBuilder() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setCustomPushNotificationBuilder() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setLatestNotificationNum(arg1: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  addLocalNotification(arg1: any, arg2: any, arg3: any, arg4: any, arg5: any, arg6: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  removeLocalNotification(arg1: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  clearLocalNotifications() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  startJPushSDK() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setBadge(arg1: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  resetBadge() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setApplicationIconBadgeNumber(arg1: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  getApplicationIconBadgeNumber(): Promise<any> {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  addLocalNotificationForIOS(arg1: any, arg2: any, arg3: any, arg4: any, arg5: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  deleteLocalNotificationWithIdentifierKeyInIOS(arg1: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  clearAllLocalNotifications() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  startLogPageView(arg1: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  stopLogPageView(arg1: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  beginLogPageView(arg1: any, arg2: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setDebugModeFromIos() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setLogOFF() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setCrashLogON() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  setLocation(arg1: any, arg2: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  isPlatformIOS() {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\n  @Cordova()\n  addDismissActions(arg1: any, arg2: any) {\n    return; // We add return; here to avoid any IDE / Compiler errors\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}